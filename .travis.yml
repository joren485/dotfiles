---

jobs:
    include:

        - &syntax_check
          name: "syntax-check pc.yml"
          stage: "lint"
          sudo: false
          language: "python"
          python: "3.6"
          cache: "pip"
          env: "PLAYBOOK=pc.yml ENVIRONMENT=production"
          before_install:
              - "pip install --upgrade pip wheel"
          install:
              - "pip install --progress-bar=off --upgrade ansible"
          before_script:
              - "chmod 700 $TRAVIS_BUILD_DIR"
              - "sed -i 's/^vault_password_file/# &/' ansible.cfg"
          script:
              - "ansible-playbook ${PLAYBOOK} --inventory-file=environments/${ENVIRONMENT}/hosts --syntax-check"

        - <<: *syntax_check
          name: "syntax-check remote.yml"
          env: "PLAYBOOK=remote.yml ENVIRONMENT=production"

        - <<: *syntax_check
          name: "syntax-check travis.yml"
          env: "PLAYBOOK=travis.yml ENVIRONMENT=testing"

        - <<: *syntax_check
          name: "ansible-lint"
          env: ""
          install:
              - "pip install --progress-bar=off --upgrade ansible-lint"
          script:
              # Rule 306 checks for the pipefail option on shell commands with pipes.
              # Rule 701 checks for galaxy_info, which we don't use, so we exclude it.
              # Rule 405 checks for a retry rule in the task, which we don't want to use.
              # Rule 204 checks for lines over 120 characters.
              - "ansible-lint -x 306,701,405,204 *.yml"

        - stage: "playbook"
          name: "Run pc.yml on PC"
          sudo: "required"
          language: "generic"
          services:
              - "docker"
          env:
              - "NAME_DOCKER=travis_test DIRECTORY_WORKING=/ansible ANSIBLE_USER_NAME=travis ANSIBLE_USER_PASSWORD=travis"
          before_install:
              - "docker pull archlinux/base:latest"
              - >
                  docker run
                  --rm
                  --detach
                  --name=${NAME_DOCKER}
                  --hostname=${NAME_DOCKER}
                  --volume=${TRAVIS_BUILD_DIR}:${DIRECTORY_WORKING}
                  --workdir=${DIRECTORY_WORKING}
                  archlinux/base:latest
                  tail -f /dev/null
          install:
              - "docker exec ${NAME_DOCKER} pacman -Sy --noconfirm --needed ansible sudo which"
          before_script:
              - "chmod 700 $TRAVIS_BUILD_DIR"
              - "sed -i 's/^vault_password_file/# &/' ansible.cfg"
              - "docker exec ${NAME_DOCKER} /bin/bash -c \"echo '%wheel ALL=(ALL) ALL' >> /etc/sudoers\""
              - "docker exec ${NAME_DOCKER} useradd -m -G wheel ${ANSIBLE_USER_NAME}"
              - "docker exec ${NAME_DOCKER} /bin/bash -c \"echo ${ANSIBLE_USER_NAME}:${ANSIBLE_USER_PASSWORD} | chpasswd\""
          script:
              # Run the test playbook twice, to check it works on a fresh host and a fully installed host
              - "docker exec ${NAME_DOCKER} ansible-playbook --inventory-file=environments/testing/hosts -vv travis.yml"
              - "docker exec ${NAME_DOCKER} ansible-playbook --inventory-file=environments/testing/hosts -vv travis.yml"
          after_script:
              - "docker stop ${NAME_DOCKER}"

notifications:
  email:
    on_success: "never"
    on_failure: "always"
