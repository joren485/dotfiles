---

- name: "Set project root variable"
  set_fact:
    project_root: "/srv/{{ project.name }}"

- name: "Create project root"
  become: yes
  file:
    path: "{{ project_root }}"
    state: "directory"
    mode: "0755"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: "Create directories relative to home directory"
  become: yes
  when: "project.directories is defined and not item.startswith('/')"
  file:
    path: "{{ project_root }}/{{ item }}"
    state: "directory"
    mode: "0755"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop: "{{ project.directories }}"

- name: "Create (absolute) directories"
  become: yes
  when: "project.directories is defined and item.startswith('/')"
  file:
    path: "{{ item }}"
    state: "directory"
    mode: "0755"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop: "{{ project.directories }}"

- name: "Place docker-compose.yaml"
  template:
    src: "docker-compose/{{ project.name }}.yaml.j2"
    dest: "{{ project_root }}/docker-compose.yaml"
    mode: "0644"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    validate: "docker-compose --file %s convert --quiet"

- name: "Setup containers"
  block:
    - name: "Pull containers"
      command:
        cmd: >-
          docker-compose
          --file="{{ project_root }}/docker-compose.yaml"
          pull
      register: "docker_compose_pull"
      changed_when: "'Pull complete' in docker_compose_pull.stderr"

    - name: "Start Containers"
      command:
        cmd: >-
          docker-compose
          --file="{{ project_root }}/docker-compose.yaml"
          up
          --detach
          --remove-orphans
      register: "docker_compose_up"
      changed_when: "'Started' in docker_compose_up.stderr"
